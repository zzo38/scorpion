(NOTE: This program is not fully tested and may be incomplete.)


=== Configuration ===

Edit the scorpiond.config file and recompile to change the configuration.
Any one marked * below means mandatory; the others are optional and can be
commented out if they are not to be used.

Note: Where MIME types and ULFI types are expected, they are only allowed
to consist of ASCII characters 0x21 to 0x7E; spaces are not allowed.

CONFIG_MAINTENANCE
  If defined, the server always responds with an error message. This must
  start with 41 and then a space and then the number of seconds (or ? if
  it is unknown) and then a space and the error message and then "\r\n".
  Leave this undefined for normal operation.

CONFIG_MAX_REQUEST *
  The maximum length of a request. Must be less than 0xFFFF.

CONFIG_MAX_NAME *
  The maximum length of a file name. Must be less than CONFIG_MAX_REQUEST.

CONFIG_ROOT *
  The root directory where the files are stored. This directory must
  contain subdirectories whose names are the domain names of the sites
  to be served. (The port number is ignored.)

CONFIG_TIMELIMIT
  The time limit, in seconds. If undefined, there is no time limit.

CONFIG_UNEXPECTED_ERROR_TIME *
  A string literal specifying the minimum number of seconds that the client
  should wait in case of a 4x error; use "?" if it is unknown.

CONFIG_DEFAULT_MIMETYPE *
  The default MIME type or ULFI type for files whose type is unknown.

CONFIG_DEFAULT_FILENAME
  If defined, the default file name to use when no file name is specified.
  If the file does not exist, it will be a directory listing, if enabled.

CONFIG_DIRLIST
  If defined, then directory listings are allowed.

CONFIG_FILENAME_CHARSET *
  The character set for file names, according to the Scorpion file format
  (e.g. use 0x10 for PC character set). (This is only relevant if
  CONFIG_DIRLIST is also defined; otherwise it is meaningless.)

CONFIG_SAFE_FILENAMES
  If defined, then disallows some characters in file names (whitelisting).

CONFIG_ALLOW_CGI
  If defined, then it is allowed to execute other programs. If not defined,
  then the execute permissions are ignored.

CONFIG_CANCEL_ALARM
  If defined, then any time limit that has been set by CONFIG_TIMELIMIT
  will be removed before calling an external program.

CONFIG_FILEMODE_ACCESS *
  The file modes needed for a client to be able to access a file. For
  example, set it to (S_IRGRP|S_IROTH) if group and other must be able to
  read it. All bits in the mask must be set to permit access. If this is
  zero then it does not check. This applies to all files and directories,
  whether or not they are executable.

CONFIG_FILEMODE_EXECUTE *
  The file modes needed for a client to be able to make the server to
  execute a file. For example, set it to (S_IXGRP|S_IXOTH) if group and
  other must be able to execute it. All bits in the mask must be set to
  execute the file, otherwise it will send the contents of the file to
  the client. (This is only required if CONFIG_ALLOW_CGI is defined.)

mimetypes *
  An array of the file types. Each element is a structure of two elements,
  the first being the last part of the file name after the "." (which it
  must be sorted by) and the second being the MIME or ULFI type.


=== Usage ===

Call the program by xinetd. You can optionally specify one argument; if it
is specified then it is used instead of CONFIG_ROOT. If it is omitted, then
CONFIG_ROOT is used. See CONFIG_ROOT for what it must contain.

These directories can then contain any files. If the file name begins with
.. then it cannot be accessed.

If a file is executable then it will be executed, with the full request as
its first argument, and only the pat after the file name as its second
argument; it must write the header line and all data to stdout, according
to the Scorpion protocol.


=== Not implemented ===

So far, the following features are not implemented yet:

* User directories (if URL path starts with /~ and a user name)

* TLS and client certificates

* MIME/ULFI overrides per file or directory

* EUC file names (only relevant for making directory listings)

* Uploading files to the server, and versioned files

* Rate limiting

* Logs

* Version 6 IP addresses in URLs

Some of the above features can be implemented by external programs,
althouigh not all of them can be. Some might be better to be implemented
within scorpiond itself. Some might be possible with options of xinetd.

